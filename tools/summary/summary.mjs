export async function summary(content) {
    try {
        const apiKey = process.env.API_KEY;
        const modelName = 'gemini-2.5-flash';

        const response = await fetch('https://generativelanguage.googleapis.com/v1beta/openai/chat/completions', {
            method: 'POST',
            headers: {
                'Content-Type': 'application/json',
                'Authorization': `Bearer ${apiKey}`
            },
            body: JSON.stringify({
                model: modelName,
                messages: [
                    {
                        role: "system",
                        content: "You are a helpful assistant that creates concise, informative markdown summaries of content. Focus on the key points and main ideas. Keep summaries brief but comprehensive."
                    },
                    {
                        role: "user",
                        content: `Please provide a concise markdown summary of the following content:\n\n${content}`
                    }
                ],
                max_tokens: 2048,
                temperature: 0.7
            })
        });

        if (!response.ok) {
            throw new Error(`HTTP error! status: ${response.status}`);
        }

        const data = await response.json();

        if (data.choices && data.choices.length > 0) {
            return data.choices[0].message.content;
        } else {
            throw new Error('No summary generated by Gemini');
        }
    } catch (error) {
        console.error('Error calling Gemini API:', error);
        return `Error generating summary: ${error.message}`;
    }
}